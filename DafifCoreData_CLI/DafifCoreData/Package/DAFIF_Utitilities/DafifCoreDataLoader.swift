/************************* DafifCoreDataLoader ******************************
* DafifCoreDataLoader
* Copyright Â© 4bitCrew, LLC - All Rights Reserved
* Created on 3/26/20, for DafifViewer
* Matthew Elmore <matt@4bitCrew.com>
* Unauthorized copying of this file is strictly prohibited
************************** DafifCoreDataLoader ******************************/

import SwiftUI
import Combine

class DafifCoreDataLoader: ObservableObject, CoreDataUtilities {
    
    public static var shared = DafifCoreDataLoader()
    
    @Published var percentComplete: CGFloat = 0.0
    private let totalItems: CGFloat = 182
    var counter = 0
    
    func incrementPercentComplete() {
        counter += 1
        print("************************************")
        print(self.counter)
        print("************************************")
        self.percentComplete += (1 / totalItems)
    }
    
    public static func loadData() {
        DafifCoreDataLoader.shared.counter = 0
        DafifCoreDataLoader.shared.percentComplete = 0.0
        DafifCoreDataStack.shared.dafifPc.performBackgroundTask({ (moc) in
            AtsCDU().loadAllFolderItems(moc: moc)
            HlptCDU().loadAllFolderItems(moc: moc)
            SuppCDU().loadAllFolderItems(moc: moc)
            TrmCDU().loadAllFolderItems(moc: moc)
            AppcCDU().loadAllFolderItems(moc: moc)
            ArptCDU().loadAllFolderItems(moc: moc)
            OrtcaCDU().loadAllFolderItems(moc: moc)
            WptCDU().loadAllFolderItems(moc: moc)
            PjaCDU().loadAllFolderItems(moc: moc)
            IrCDU().loadAllFolderItems(moc: moc)
            MtrCDU().loadAllFolderItems(moc: moc)
            PappCDU().loadAllFolderItems(moc: moc)
            NavCDU().loadAllFolderItems(moc: moc)
            PrCDU().loadAllFolderItems(moc: moc)
            TzCDU().loadAllFolderItems(moc: moc)
            HoldCDU().loadAllFolderItems(moc: moc)
            SuasCDU().loadAllFolderItems(moc: moc)
            ArfCDU().loadAllFolderItems(moc: moc)
            VfrCDU().loadAllFolderItems(moc: moc)
            BdryCDU().loadAllFolderItems(moc: moc)
        })
    }
    
    func deleteData() {
        counter = 0
        self.percentComplete = 59/self.totalItems //<- this is because I split things up a bit
        DafifCoreDataStack.shared.dafifPc.performBackgroundTask({ (moc) in
            AtsCDU().deleteAllFromCoreData(moc: moc)
            VfrCDU().deleteAllFromCoreData(moc: moc)
            MtrCDU().deleteAllFromCoreData(moc: moc)
            HoldCDU().deleteAllFromCoreData(moc: moc)
            PrCDU().deleteAllFromCoreData(moc: moc)
            PappCDU().deleteAllFromCoreData(moc: moc)
            ArfCDU().deleteAllFromCoreData(moc: moc)
            TzCDU().deleteAllFromCoreData(moc: moc)
            PjaCDU().deleteAllFromCoreData(moc: moc)
            HlptCDU().deleteAllFromCoreData(moc: moc)
            OrtcaCDU().deleteAllFromCoreData(moc: moc)
            TrmCDU().deleteAllFromCoreData(moc: moc)
            BdryCDU().deleteAllFromCoreData(moc: moc)
            WptCDU().deleteAllFromCoreData(moc: moc)
            AppcCDU().deleteAllFromCoreData(moc: moc)
            IrCDU().deleteAllFromCoreData(moc: moc)
            ArptCDU().deleteAllFromCoreData(moc: moc)
            NavCDU().deleteAllFromCoreData(moc: moc)
            SuppCDU().deleteAllFromCoreData(moc: moc)
            SuasCDU().deleteAllFromCoreData(moc: moc)
        })
    }
    
    func printCDCounter() {
        DafifCoreDataStack.shared.dafifPc.performBackgroundTask({ (moc) in
            _ = self.getCD(entityType: VfrRte(), named: "VfrRte", moc: moc)
            _ = self.getCD(entityType: VfrRteSeg(), named: "VfrRteSeg", moc: moc)
            _ = self.getCD(entityType: VfrRteRmk(), named: "VfrRteRmk", moc: moc)
            _ = self.getCD(entityType: Pja(), named: "Pja", moc: moc)
            _ = self.getCD(entityType: PjaPar(), named: "PjaPar", moc: moc)
            _ = self.getCD(entityType: Ortca(), named: "Ortca", moc: moc)
            _ = self.getCD(entityType: IrPar(), named: "IrPar", moc: moc)
            _ = self.getCD(entityType: Ir(), named: "Ir", moc: moc)
            _ = self.getCD(entityType: IrCtry(), named: "IrCtry", moc: moc)
            _ = self.getCD(entityType: ArfFt(), named: "ArfFt", moc: moc)
            _ = self.getCD(entityType: ArfSeg(), named: "ArfSeg", moc: moc)
            _ = self.getCD(entityType: ArfAtc(), named: "ArfAtc", moc: moc)
            _ = self.getCD(entityType: ArfRmk(), named: "ArfRmk", moc: moc)
            _ = self.getCD(entityType: ArfPar(), named: "ArfPar", moc: moc)
            _ = self.getCD(entityType: ArfSch(), named: "ArfSch", moc: moc)
            _ = self.getCD(entityType: ArfPt(), named: "ArfPt", moc: moc)
            _ = self.getCD(entityType: MtrOsm(), named: "MtrOsm", moc: moc)
            _ = self.getCD(entityType: Mtr(), named: "Mtr", moc: moc)
            _ = self.getCD(entityType: MtrOv(), named: "MtrOv", moc: moc)
            _ = self.getCD(entityType: MtrRmk(), named: "MtrRmk", moc: moc)
            _ = self.getCD(entityType: MtrPar(), named: "MtrPar", moc: moc)
            _ = self.getCD(entityType: SuasPar(), named: "SuasPar", moc: moc)
            _ = self.getCD(entityType: Suas(), named: "Suas", moc: moc)
            _ = self.getCD(entityType: SuasNote(), named: "SuasNote", moc: moc)
            _ = self.getCD(entityType: SuasCtry(), named: "SuasCtry", moc: moc)
            _ = self.getCD(entityType: Ils(), named: "Ils", moc: moc)
            _ = self.getCD(entityType: Rwy(), named: "Rwy", moc: moc)
            _ = self.getCD(entityType: ArptRmk(), named: "ArptRmk", moc: moc)
            _ = self.getCD(entityType: Acom(), named: "Acom", moc: moc)
            _ = self.getCD(entityType: Arpt(), named: "Arpt", moc: moc)
            _ = self.getCD(entityType: AcomRmk(), named: "AcomRmk", moc: moc)
            _ = self.getCD(entityType: Anav(), named: "Anav", moc: moc)
            _ = self.getCD(entityType: Agear(), named: "Agear", moc: moc)
            _ = self.getCD(entityType: TrmRmk(), named: "TrmRmk", moc: moc)
            _ = self.getCD(entityType: TrmClb(), named: "TrmClb", moc: moc)
            _ = self.getCD(entityType: TrmSeg(), named: "TrmSeg", moc: moc)
            _ = self.getCD(entityType: TrmMin(), named: "TrmMin", moc: moc)
            _ = self.getCD(entityType: TrmMsa(), named: "TrmMsa", moc: moc)
            _ = self.getCD(entityType: TrmPar(), named: "TrmPar", moc: moc)
            _ = self.getCD(entityType: TrmFdr(), named: "TrmFdr", moc: moc)
            _ = self.getCD(entityType: Pad(), named: "Pad", moc: moc)
            _ = self.getCD(entityType: Hnav(), named: "Hnav", moc: moc)
            _ = self.getCD(entityType: HlptRmk(), named: "HlptRmk", moc: moc)
            _ = self.getCD(entityType: Hlpt(), named: "Hlpt", moc: moc)
            _ = self.getCD(entityType: Hcom(), named: "Hcom", moc: moc)
            _ = self.getCD(entityType: HcomRmk(), named: "HcomRmk", moc: moc)
            _ = self.getCD(entityType: AppcSuasWx(), named: "AppcSuasWx", moc: moc)
            _ = self.getCD(entityType: AppcComSymbols(), named: "AppcComSymbols", moc: moc)
            _ = self.getCD(entityType: AppcPrAcftType(), named: "AppcPrAcftType", moc: moc)
            _ = self.getCD(entityType: AppcNavType(), named: "AppcNavType", moc: moc)
            _ = self.getCD(entityType: AppcAbsorbingSys(), named: "AppcAbsorbingSys", moc: moc)
            _ = self.getCD(entityType: AppcTrmTrackCd(), named: "AppcTrmTrackCd", moc: moc)
            _ = self.getCD(entityType: AppcComType(), named: "AppcComType", moc: moc)
            _ = self.getCD(entityType: AppcLevel(), named: "AppcLevel", moc: moc)
            _ = self.getCD(entityType: AppcFluids(), named: "AppcFluids", moc: moc)
            _ = self.getCD(entityType: AppcAtsWptDesc1(), named: "AppcAtsWptDesc1", moc: moc)
            _ = self.getCD(entityType: AppcIlsCat(), named: "AppcIlsCat", moc: moc)
            _ = self.getCD(entityType: AppcUsStateCodes(), named: "AppcUsStateCodes", moc: moc)
            _ = self.getCD(entityType: AppcAtsFreqClass(), named: "AppcAtsFreqClass", moc: moc)
            _ = self.getCD(entityType: AppcTrmType(), named: "AppcTrmType", moc: moc)
            _ = self.getCD(entityType: AppcFuelCodes(), named: "AppcFuelCodes", moc: moc)
            _ = self.getCD(entityType: AppcAtsWptDesc2(), named: "AppcAtsWptDesc2", moc: moc)
            _ = self.getCD(entityType: AppcEngagingDev(), named: "AppcEngagingDev", moc: moc)
            _ = self.getCD(entityType: AppcPrPtType(), named: "AppcPrPtType", moc: moc)
            _ = self.getCD(entityType: AppcTrmNavType(), named: "AppcTrmNavType", moc: moc)
            _ = self.getCD(entityType: AppcCcIcao(), named: "AppcCcIcao", moc: moc)
            _ = self.getCD(entityType: AppcAtsWptDesc3(), named: "AppcAtsWptDesc3", moc: moc)
            _ = self.getCD(entityType: AppcMtrCrsAlt(), named: "AppcMtrCrsAlt", moc: moc)
            _ = self.getCD(entityType: AppcAtsStatus(), named: "AppcAtsStatus", moc: moc)
            _ = self.getCD(entityType: AppcBdryType(), named: "AppcBdryType", moc: moc)
            _ = self.getCD(entityType: AppcAtsWptDesc4(), named: "AppcAtsWptDesc4", moc: moc)
            _ = self.getCD(entityType: AppcHeliType(), named: "AppcHeliType", moc: moc)
            _ = self.getCD(entityType: AppcMtrUsageCd(), named: "AppcMtrUsageCd", moc: moc)
            _ = self.getCD(entityType: AppcWptType(), named: "AppcWptType", moc: moc)
            _ = self.getCD(entityType: AppcIlsCompType(), named: "AppcIlsCompType", moc: moc)
            _ = self.getCD(entityType: AppcWptUsageCd(), named: "AppcWptUsageCd", moc: moc)
            _ = self.getCD(entityType: AppcOils(), named: "AppcOils", moc: moc)
            _ = self.getCD(entityType: AppcArDir(), named: "AppcArDir", moc: moc)
            _ = self.getCD(entityType: AppcDerivation(), named: "AppcDerivation", moc: moc)
            _ = self.getCD(entityType: AppcArUsageCd(), named: "AppcArUsageCd", moc: moc)
            _ = self.getCD(entityType: AppcRwySfcCodes(), named: "AppcRwySfcCodes", moc: moc)
            _ = self.getCD(entityType: AppcAtsType(), named: "AppcAtsType", moc: moc)
            _ = self.getCD(entityType: AppcRwyLgtCodes(), named: "AppcRwyLgtCodes", moc: moc)
            _ = self.getCD(entityType: AppcNavStatus(), named: "AppcNavStatus", moc: moc)
            _ = self.getCD(entityType: AppcPjaType(), named: "AppcPjaType", moc: moc)
            _ = self.getCD(entityType: AppcNavRcc(), named: "AppcNavRcc", moc: moc)
            _ = self.getCD(entityType: AppcOprAgcy(), named: "AppcOprAgcy", moc: moc)
            _ = self.getCD(entityType: AppcArType(), named: "AppcArType", moc: moc)
            _ = self.getCD(entityType: AppcTrmProc(), named: "AppcTrmProc", moc: moc)
            _ = self.getCD(entityType: AppcTrmWptDesc3(), named: "AppcTrmWptDesc3", moc: moc)
            _ = self.getCD(entityType: AppcTrmWptDesc2(), named: "AppcTrmWptDesc2", moc: moc)
            _ = self.getCD(entityType: AppcShape(), named: "AppcShape", moc: moc)
            _ = self.getCD(entityType: AppcComFreqUnit(), named: "AppcComFreqUnit", moc: moc)
            _ = self.getCD(entityType: AppcTrmWptDesc1(), named: "AppcTrmWptDesc1", moc: moc)
            _ = self.getCD(entityType: AppcDaylightSav(), named: "AppcDaylightSav", moc: moc)
            _ = self.getCD(entityType: AppcJasu(), named: "AppcJasu", moc: moc)
            _ = self.getCD(entityType: AppcArptType(), named: "AppcArptType", moc: moc)
            _ = self.getCD(entityType: AppcAcftCap(), named: "AppcAcftCap", moc: moc)
            _ = self.getCD(entityType: AppcPjaOprTime(), named: "AppcPjaOprTime", moc: moc)
            _ = self.getCD(entityType: AppcTrmWptDesc4(), named: "AppcTrmWptDesc4", moc: moc)
            _ = self.getCD(entityType: AppcNavUsageCd(), named: "AppcNavUsageCd", moc: moc)
            _ = self.getCD(entityType: AppcLclHorizDatums(), named: "AppcLclHorizDatums", moc: moc)
            _ = self.getCD(entityType: AppcIlsColctn(), named: "AppcIlsColctn", moc: moc)
            _ = self.getCD(entityType: AppcAltitudeDesc(), named: "AppcAltitudeDesc", moc: moc)
            _ = self.getCD(entityType: AppcSuasType(), named: "AppcSuasType", moc: moc)
            _ = self.getCD(entityType: Pr(), named: "Pr", moc: moc)
            _ = self.getCD(entityType: PrPar(), named: "PrPar", moc: moc)
            _ = self.getCD(entityType: Wpt(), named: "Wpt", moc: moc)
            _ = self.getCD(entityType: Papp(), named: "Papp", moc: moc)
            _ = self.getCD(entityType: Nav(), named: "Nav", moc: moc)
            _ = self.getCD(entityType: Bdry(), named: "Bdry", moc: moc)
            _ = self.getCD(entityType: BdryCtry(), named: "BdryCtry", moc: moc)
            _ = self.getCD(entityType: BdryPar(), named: "BdryPar", moc: moc)
            _ = self.getCD(entityType: AtsRmk(), named: "AtsRmk", moc: moc)
            _ = self.getCD(entityType: AtsCtry(), named: "AtsCtry", moc: moc)
            _ = self.getCD(entityType: Ats(), named: "Ats", moc: moc)
            _ = self.getCD(entityType: TzPar(), named: "TzPar", moc: moc)
            _ = self.getCD(entityType: Tz(), named: "Tz", moc: moc)
            _ = self.getCD(entityType: Hold(), named: "Hold", moc: moc)
            _ = self.getCD(entityType: Fueloil(), named: "Fueloil", moc: moc)
            _ = self.getCD(entityType: SvcRmk(), named: "SvcRmk", moc: moc)
            _ = self.getCD(entityType: AddRwy(), named: "AddRwy", moc: moc)
            _ = self.getCD(entityType: Gen(), named: "Gen", moc: moc)
        })
    }
    
}
